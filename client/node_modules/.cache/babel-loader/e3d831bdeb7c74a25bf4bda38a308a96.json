{"remainingRequest":"E:\\workplace\\WEB\\node-app\\client\\node_modules\\babel-loader\\lib\\index.js!E:\\workplace\\WEB\\node-app\\client\\src\\store.js","dependencies":[{"path":"E:\\workplace\\WEB\\node-app\\client\\src\\store.js","mtime":1538921823682},{"path":"E:\\workplace\\WEB\\node-app\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1538537971188},{"path":"E:\\workplace\\WEB\\node-app\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"E:\\\\workplace\\\\WEB\\\\node-app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/defineProperty\";\n\nvar _mutations;\n\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nvar types = {\n  SET_AUTHENTICATED: 'SET_AUTHENTICATED',\n  SET_USER: 'SET_USER'\n};\nvar state = {\n  isAuthenticated: false,\n  user: {}\n};\nvar getters = {\n  isAuthenticated: function isAuthenticated(state) {\n    return state.isAuthenticated;\n  },\n  user: function user(state) {\n    return state.user;\n  }\n};\nvar mutations = (_mutations = {}, _defineProperty(_mutations, types.SET_AUTHENTICATED, function (state, isAuthenticated) {\n  if (isAuthenticated) {\n    state.isAuthenticated = isAuthenticated;\n  } else {\n    state.isAuthenticated = false;\n  }\n}), _defineProperty(_mutations, types.SET_USER, function (state, user) {\n  if (user) {\n    state.user = user;\n  } else {\n    state.user = {};\n  }\n}), _mutations);\nvar actions = {\n  setAuthenticated: function setAuthenticated(_ref, isAuthenticated) {\n    var commit = _ref.commit;\n    commit(types.SET_AUTHENTICATED, isAuthenticated);\n  },\n  setUser: function setUser(_ref2, user) {\n    var commit = _ref2.commit;\n    commit(types.SET_USER, user);\n  },\n  clearCurrentState: function clearCurrentState(_ref3) {\n    var commit = _ref3.commit;\n    commit(types.SET_AUTHENTICATED, false);\n    commit(types.SET_USER, null);\n  }\n};\nexport default new Vuex.Store({\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n});",{"version":3,"sources":["E:\\workplace\\WEB\\node-app\\client\\src\\store.js"],"names":["Vue","Vuex","use","types","SET_AUTHENTICATED","SET_USER","state","isAuthenticated","user","getters","mutations","actions","setAuthenticated","commit","setUser","clearCurrentState","Store"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,IAAIE,GAAJ,CAAQD,IAAR;AAEA,IAAME,QAAQ;AACZC,qBAAmB,mBADP;AAEZC,YAAU;AAFE,CAAd;AAKA,IAAMC,QAAQ;AACZC,mBAAiB,KADL;AAEZC,QAAM;AAFM,CAAd;AAKA,IAAMC,UAAU;AACdF,mBAAiB;AAAA,WAASD,MAAMC,eAAf;AAAA,GADH;AAEdC,QAAM;AAAA,WAASF,MAAME,IAAf;AAAA;AAFQ,CAAhB;AAKA,IAAME,0DACHP,MAAMC,iBADH,YACsBE,KADtB,EAC6BC,eAD7B,EAC8C;AAChD,MAAIA,eAAJ,EAAqB;AACnBD,UAAMC,eAAN,GAAwBA,eAAxB;AACD,GAFD,MAEO;AACLD,UAAMC,eAAN,GAAwB,KAAxB;AACD;AACF,CAPG,+BAQHJ,MAAME,QARH,YAQaC,KARb,EAQoBE,IARpB,EAQ0B;AAC5B,MAAIA,IAAJ,EAAU;AAAEF,UAAME,IAAN,GAAaA,IAAb;AAAoB,GAAhC,MAAsC;AAAEF,UAAME,IAAN,GAAa,EAAb;AAAiB;AAC1D,CAVG,cAAN;AAaA,IAAMG,UAAU;AACdC,oBAAkB,gCAAWL,eAAX,EAA+B;AAAA,QAA7BM,MAA6B,QAA7BA,MAA6B;AAC/CA,WAAOV,MAAMC,iBAAb,EAAgCG,eAAhC;AACD,GAHa;AAIdO,WAAS,wBAAWN,IAAX,EAAoB;AAAA,QAAlBK,MAAkB,SAAlBA,MAAkB;AAC3BA,WAAOV,MAAME,QAAb,EAAuBG,IAAvB;AACD,GANa;AAOdO,qBAAmB,kCAAc;AAAA,QAAZF,MAAY,SAAZA,MAAY;AAC/BA,WAAOV,MAAMC,iBAAb,EAAgC,KAAhC;AACAS,WAAOV,MAAME,QAAb,EAAuB,IAAvB;AACD;AAVa,CAAhB;AAaA,eAAe,IAAIJ,KAAKe,KAAT,CAAe;AAC5BV,cAD4B;AAE5BG,kBAF4B;AAG5BC,sBAH4B;AAI5BC;AAJ4B,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nconst types = {\n  SET_AUTHENTICATED: 'SET_AUTHENTICATED',\n  SET_USER: 'SET_USER'\n}\n\nconst state = {\n  isAuthenticated: false,\n  user: {}\n}\n\nconst getters = {\n  isAuthenticated: state => state.isAuthenticated,\n  user: state => state.user\n}\n\nconst mutations = {\n  [types.SET_AUTHENTICATED](state, isAuthenticated) {\n    if (isAuthenticated) {\n      state.isAuthenticated = isAuthenticated;\n    } else {\n      state.isAuthenticated = false;\n    }\n  },\n  [types.SET_USER](state, user) {\n    if (user) { state.user = user; } else { state.user = {} }\n  }\n}\n\nconst actions = {\n  setAuthenticated: ({commit}, isAuthenticated) => {\n    commit(types.SET_AUTHENTICATED, isAuthenticated);\n  },\n  setUser: ({commit}, user) => {\n    commit(types.SET_USER, user);\n  },\n  clearCurrentState: ({commit}) => {\n    commit(types.SET_AUTHENTICATED, false);\n    commit(types.SET_USER, null);\n  }\n}\n\nexport default new Vuex.Store({\n  state,\n  getters,\n  mutations,\n  actions\n})\n"]}]}